--- rtsx.c
+++ rtsx.c
@@ -122,36 +122,6 @@
 #define SPRINTF(args...) \
 	do { if (pos < buffer+length) pos += sprintf(pos, ## args); } while (0)
 
-static int proc_info (struct Scsi_Host *host, char *buffer,
-		char **start, off_t offset, int length, int inout)
-{
-	char *pos = buffer;
-
-	
-	if (inout)
-		return length;
-
-	
-	SPRINTF("   Host scsi%d: %s\n", host->host_no, CR_DRIVER_NAME);
-
-	
-	SPRINTF("       Vendor: Realtek Corp.\n");
-	SPRINTF("      Product: Barossa Plusplus\n");
-	SPRINTF("      Version: %s\n", DRIVER_VERSION);
-	SPRINTF("        Build: %s\n", __TIME__);
-
-	/*
-	 * Calculate start of next buffer, and return value.
-	 */
-	*start = buffer + offset;
-
-	if ((pos - buffer) < offset)
-		return (0);
-	else if ((pos - buffer - offset) < length)
-		return (pos - buffer - offset);
-	else
-		return (length);
-}
 
 
 
@@ -163,8 +133,8 @@
 
 	
 	if (chip->srb != NULL) {
-		printk(KERN_ERR "Error in %s: chip->srb = %p\n",
-			__FUNCTION__, chip->srb);
+		//printk(KERN_ERR "Error in %s: chip->srb = %p\n",
+			//__FUNCTION__, chip->srb);
 		return SCSI_MLQUEUE_HOST_BUSY;
 	}
 
@@ -256,7 +226,7 @@
 	
 	.name =				CR_DRIVER_NAME,
 	.proc_name =			CR_DRIVER_NAME,
-	.proc_info =			proc_info,
+//	.proc_info =			proc_info,
 	.info =				host_info,
 
 	
@@ -897,7 +867,7 @@
 	int err = 0;
 	struct task_struct *th;
 
-	printk(KERN_INFO "--- %s ---\n", __TIME__);
+	//printk(KERN_INFO "--- %s ---\n", __TIME__);
 
 	err = pci_enable_device(pci);
 	if (err < 0) {
